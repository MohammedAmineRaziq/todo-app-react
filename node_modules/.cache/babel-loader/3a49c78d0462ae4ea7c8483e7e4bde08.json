{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Bureau\\\\REACT APPS\\\\todo list\\\\todo-list-app\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const AddTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isCompete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"today's plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: AddTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"uu1hS44ImpqtDP84/kJI6RehsRs=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Bureau/REACT APPS/todo list/todo-list-app/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","AddTodo","todo","text","test","newTodos","removeTodo","id","removeArr","filter","completeTodo","updatedTodos","map","isComplete","isCompete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBL,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAG;AACnB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAY,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAf,EAAuC;AACnC;AACH;;AAED,UAAME,QAAQ,GAAC,CAACH,IAAD,EAAM,GAAGH,KAAT,CAAf;AAEAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GARD;;AAUA,QAAMC,UAAU,GAAEC,EAAE,IAAE;AAClB,UAAMC,SAAS,GAAC,CAAC,GAAGT,KAAJ,EAAWU,MAAX,CAAkBP,IAAI,IAAEA,IAAI,CAACK,EAAL,KAAUA,EAAlC,CAAhB;AAEAP,IAAAA,QAAQ,CAACQ,SAAD,CAAR;AACH,GAJD;;AAKA,QAAME,YAAY,GAAGH,EAAE,IAAI;AACvB,QAAII,YAAY,GAAGZ,KAAK,CAACa,GAAN,CAAUV,IAAI,IAAI;AACjC,UAAGA,IAAI,CAACK,EAAL,KAAYA,EAAf,EAAkB;AACdL,QAAAA,IAAI,CAACW,UAAL,GAAiB,CAACX,IAAI,CAACY,SAAvB;AACH;;AACD,aAAOZ,IAAP;AAEH,KANkB,CAAnB;AAOAF,IAAAA,QAAQ,CAACW,YAAD,CAAR;AACH,GATD;;AAWA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEV;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,KAAb;AAAoB,MAAA,YAAY,EAAEW,YAAlC;AAAgD,MAAA,UAAU,EAAEJ;AAA5D;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GArCQR,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React ,{useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\n    const[todos,setTodos]=useState([])\r\n\r\n    const AddTodo = todo =>{\r\n        if(!todo.text||/^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n\r\n        const newTodos=[todo,...todos]\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const removeTodo =id=>{\r\n        const removeArr=[...todos].filter(todo=>todo.id!==id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.isComplete =!todo.isCompete;\r\n            }\r\n            return todo;\r\n\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>today's plan</h1>\r\n            <TodoForm onSubmit={AddTodo}/>\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}